{"absId":"curl/plugin/_fetchText","text":"define([], function () {\n\n\tvar xhr, progIds;\n\n\tprogIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'];\n\n\txhr = function () {\n\t\tif (typeof XMLHttpRequest !== \"undefined\") {\n\t\t\t// rewrite the getXhr method to always return the native implementation\n\t\t\txhr = function () {\n\t\t\t\treturn new XMLHttpRequest();\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\t// keep trying progIds until we find the correct one, then rewrite the getXhr method\n\t\t\t// to always return that one.\n\t\t\tvar noXhr = xhr = function () {\n\t\t\t\tthrow new Error(\"getXhr(): XMLHttpRequest not available\");\n\t\t\t};\n\t\t\twhile (progIds.length > 0 && xhr === noXhr) (function (id) {\n\t\t\t\ttry {\n\t\t\t\t\tnew ActiveXObject(id);\n\t\t\t\t\txhr = function () {\n\t\t\t\t\t\treturn new ActiveXObject(id);\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tcatch (ex) {\n\t\t\t\t}\n\t\t\t}(progIds.shift()));\n\t\t}\n\t\treturn xhr();\n\t};\n\n\tfunction fetchText (url, callback, errback) {\n\t\tvar x = xhr();\n\t\tx.open('GET', url, true);\n\t\tx.onreadystatechange = function (e) {\n\t\t\tif (x.readyState === 4) {\n\t\t\t\tif (x.status < 400) {\n\t\t\t\t\tcallback(x.responseText);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\terrback(new Error('fetchText() failed. status: ' + x.statusText));\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tx.send(null);\n\t}\n\n\treturn fetchText;\n\n});\n","modules":[{"pos":0,"count":23,"factory":true,"id":"curl/plugin/_fetchText"}]}