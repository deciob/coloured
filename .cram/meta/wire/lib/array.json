{"absId":"wire/lib/array","text":"/** @license MIT License (c) copyright B Cavalier & J Hann */\n\n/**\n * Licensed under the MIT License at:\n * http://www.opensource.org/licenses/mit-license.php\n */\n\n(function(define){\ndefine(function() {\n\"use strict\";\n\n\tvar slice = [].slice;\n\n\treturn {\n\t\tdelegate: delegateArray,\n\t\tfromArguments: fromArguments\n\t};\n\n\t/**\n\t * Creates a new {Array} with the same contents as array\n\t * @param array {Array}\n\t * @return {Array} a new {Array} with the same contents as array. If array is falsey,\n\t *  returns a new empty {Array}\n\t */\n\tfunction delegateArray(array) {\n\t\treturn array ? [].concat(array) : [];\n\t}\n\n\tfunction fromArguments(args, index) {\n\t\treturn slice.call(args, index||0);\n\t}\n\n});\n})(typeof define == 'function'\n\t// AMD\n\t? define\n\t// CommonJS\n\t: function(factory) { module.exports = factory(); }\n);","modules":[{"pos":183,"count":18,"factory":true,"id":"wire/lib/array"}]}{"absId":"wire/lib/array","text":"/** @license MIT License (c) copyright B Cavalier & J Hann */\n\n/**\n * Licensed under the MIT License at:\n * http://www.opensource.org/licenses/mit-license.php\n */\n\n(function(define){\ndefine(function() {\n\"use strict\";\n\n\tvar slice = [].slice;\n\n\treturn {\n\t\tdelegate: delegateArray,\n\t\tfromArguments: fromArguments\n\t};\n\n\t/**\n\t * Creates a new {Array} with the same contents as array\n\t * @param array {Array}\n\t * @return {Array} a new {Array} with the same contents as array. If array is falsey,\n\t *  returns a new empty {Array}\n\t */\n\tfunction delegateArray(array) {\n\t\treturn array ? [].concat(array) : [];\n\t}\n\n\tfunction fromArguments(args, index) {\n\t\treturn slice.call(args, index||0);\n\t}\n\n});\n})(typeof define == 'function'\n\t// AMD\n\t? define\n\t// CommonJS\n\t: function(factory) { module.exports = factory(); }\n);","modules":[{"pos":183,"count":18,"factory":true,"id":"wire/lib/array"}]}