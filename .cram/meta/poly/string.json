{"absId":"poly/string","text":"/**\n * String polyfill / shims\n *\n * (c) copyright 2011-2013 Brian Cavalier and John Hann\n *\n * This module is part of the cujo.js family of libraries (http://cujojs.com/).\n *\n * Licensed under the MIT License at:\n * \t\thttp://www.opensource.org/licenses/mit-license.php\n *\n * Adds str.trim(), str.trimRight(), and str.trimLeft()\n *\n * Note: we don't bother trimming all possible ES5 white-space characters.\n * If you truly need strict ES5 whitespace compliance in all browsers,\n * create your own trim function.\n * from http://perfectionkills.com/whitespace-deviations/\n * '\\x09-\\x0D\\x20\\xA0\\u1680\\u180E\\u2000-\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029'\n */\ndefine (['./lib/_base'], function (base) {\n\t\"use strict\";\n\n\tvar proto = String.prototype,\n\t\tfeatureMap,\n\t\thas,\n\t\ttoString;\n\n\tfeatureMap = {\n\t\t'string-trim': 'trim',\n\t\t'string-trimleft': 'trimLeft',\n\t\t'string-trimright': 'trimRight'\n\t};\n\n\tfunction checkFeature (feature) {\n\t\tvar prop = featureMap[feature];\n\t\treturn base.isFunction(proto[prop]);\n\t}\n\n\tfunction neg () { return false; }\n\n\thas = checkFeature;\n\n\t// compressibility helper\n\tfunction remove (str, rx) {\n\t\treturn str.replace(rx, '');\n\t}\n\n\ttoString = base.createCaster(String, 'String');\n\n\tvar trimRightRx, trimLeftRx;\n\n\ttrimRightRx = /\\s+$/;\n\ttrimLeftRx = /^\\s+/;\n\n\tfunction checkShims () {\n\t\tif (!has('string-trim')) {\n\t\t\tproto.trim = function trim () {\n\t\t\t\treturn remove(remove(toString(this), trimLeftRx), trimRightRx);\n\t\t\t};\n\t\t}\n\n\t\tif (!has('string-trimleft')) {\n\t\t\tproto.trimLeft = function trimLeft () {\n\t\t\t\treturn remove(toString(this), trimLeftRx);\n\t\t\t};\n\t\t}\n\n\t\tif (!has('string-trimright')) {\n\t\t\tproto.trimRight = function trimRight () {\n\t\t\t\treturn remove(toString(this), trimRightRx);\n\t\t\t};\n\t\t}\n\n\t}\n\n\tcheckShims();\n\n\treturn {\n\t\tsetWhitespaceChars: function (wsc) {\n\t\t\ttrimRightRx = new RegExp(wsc + '$');\n\t\t\ttrimLeftRx = new RegExp('^' + wsc);\n\t\t\t// fail all has() checks and check shims again\n\t\t\thas = neg;\n\t\t\tcheckShims();\n\t\t}\n\t};\n\n});\n","modules":[{"pos":652,"count":41,"depList":["poly/lib/_base"],"factory":true,"argList":["base"],"id":"poly/string"}]}